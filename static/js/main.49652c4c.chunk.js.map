{"version":3,"sources":["actions/UserActions.js","Users.js","actions/ActionTypes.js","reducers/userReducer.js","reducers/index.js","Store.js","App.js","index.js"],"names":["baseURL","Component","Users","props","getDetails2","url","fetch","then","data","json","output","setState","dataFlag","fetchData","toggleModal","console","log","state","isOpen","abilities","ability","name","sprites","front_default","species","bind","this","fetchUsers","userJsx","reduxUserState","length","map","user","className","key","href","onClick","deleteUser","Modal","onClose","ModalHeader","toggle","ModalBody","src","max-width","height","alt","id","weight","target","connect","users","pokemons","dispatch","a","type","payload","deleteData","axios","get","responseData","results","getData","getPokemonDetail","initialState","combineReducers","action","filteredArray","filter","newUsersArray","userData","newCreateUsersArray","middleware","thunk","Store","createStore","rootReducer","compose","applyMiddleware","App","store","from","opacity","marginLeft","to","config","duration","delay","style","marginRight","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49652c4c.chunk.js","sourcesContent":["import { DELETE_USER, ADD_USER} from './ActionTypes';\nimport { FETCH_USERS } from './ActionTypes';\nimport axios from 'axios';\nimport { CREATE_USER } from './ActionTypes';\nimport { Component } from 'react';\n\nconst baseURL = \"https://pokeapi.co/api/v2/pokemon/\";\n\nexport class DataDetails extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          details: {},\n        }\n      }\n\n}\n\nexport function getPokemonDetail(url){\n    console.log(url);\n}\nexport function fetchUsers(){\n\n    return function(dispatch) {\n        const getData = async () => {\n            try {\n                let responseData = await axios.get(baseURL);\n\n                dispatch({\n                    type: FETCH_USERS,\n                    payload: responseData.data.results,\n                })\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n        getData();\n    }\n}\n\nexport function deleteUser(id) {\n    return function (dispatch) {\n\n        const deleteData = async () => {\n\n            dispatch({\n                type: DELETE_USER,\n                payload: id,\n            });\n    \n        }\n        deleteData();\n    };\n}\n\nexport function addUser(userData) {\n    return function (dispatch) {\n        dispatch({\n            type: ADD_USER,\n            payload: {userData}\n        });\n    };\n} \n\nexport function createUser(userData) {\n    return function(dispatch){\n        const postData = async () => {\n            try {\n          \n                let responseData = await axios.post(baseURL, userData);\n\n                dispatch({\n                    type: CREATE_USER,\n                    payload: {userData}\n                });\n        \n        \n            }        \n            catch (error) {\n                console.log(error)            \n            }\n        }\n        postData();\n\n    }\n}\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport { deleteUser } from \"./actions/UserActions\";\nimport { fetchUsers, getPokemonDetail } from \"./actions/UserActions\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nimport ShowDetails from './showDetails';\n\nexport class Users extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      dataFlag: false,\n      fetchData: {\n        abilities: [{ability: {name: '', url: ''}}],\n        sprites: {\n          front_default: '',\n        },\n        species: {\n          url: ''\n        }\n      },\n      isOpen: false\n    }\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n\n  // jm add for fetch\n  componentDidMount() {\n     console.log(\"inside Users > compdidmount\")\n     this.props.fetchUsers();\n  }\n\n  getDetails2 = url => {\n    let resp = fetch(url).then(data => data.json()).then(output => {this.setState({dataFlag: true,fetchData: output});});\n    this.toggleModal();\n    console.log(this.state);\n    return \n  \n  }\n\n toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n    console.log(\"modal change\")\n  }\n\n  render() {\n    console.log(\"Inside Users->render\");\n    console.log(this.props);\n    let userJsx =\n      this.props.reduxUserState && this.props.reduxUserState.length > 0 ? (\n        this.props.reduxUserState.map((user) => (\n          // <div><div>{JSON.stringify(user)}</div>\n          <div className=\"card col-12 col-md-6 p-2\" key={user.name}>\n            {/* <img src={user.avatar} alt={user.first_name} /> */}\n            <h4>{user.name}</h4>\n            <p>Details: <a href={user.url}>{user.url}</a></p>\n            <hr></hr>\n            <button\n              className=\"btn btn-primary btn-sm\"\n              onClick={() => this.getDetails2(user.url)}>\n              View Attributes\n            </button>\n            <br></br>\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => this.props.deleteUser(user.name)}>\n              Delete\n            </button>\n            <br></br>\n          </div>\n          // </div>\n        ))\n      ) : (\n        <p>No users exist</p>\n      );\n\n    return (\n      <div>\n        <br></br>\n        <h2>Pokemons</h2>\n{/*         <div>State:{JSON.stringify(this.state.fetchData.sprites.front_default)} , {JSON.stringify(this.state.isOpen)}\n        { (this.state.fetchData.sprites.front_default !== '') ?\n                  <img src={this.state.fetchData.sprites.front_default} alt=\"test\"/> : ''\n        }\n        </div> */}\n        <Modal isOpen={this.state.isOpen}\n          onClose={this.toggleModal}>\n            <ModalHeader toggle={this.toggleModal}>Pokemon Details: <strong>{this.state.fetchData.name}</strong></ModalHeader>\n            <ModalBody>\n              <ul>\n                <li>Image: <img src={this.state.fetchData.sprites.front_default} max-width=\"100%\" height=\"auto\" alt=\"test\"/></li>\n                <li>ID: {this.state.fetchData.id}</li>\n                <li>Name: {this.state.fetchData.name}</li>\n                <li>Height: {this.state.fetchData.height}</li>\n                <li>Weight: {this.state.fetchData.weight}</li>\n                <li>Species: <a href={this.state.fetchData.species.url} target=\"_blank\">View All Details</a></li>\n                <li>Abilities:<ul> \n                  {this.state.fetchData.abilities.map(abilities => {\n                    return (<li>{abilities.ability.name}</li>)}\n                    )}\n                  </ul></li>  \n              </ul>\n\n            </ModalBody>\n        </Modal>\n        <div className=\"container\">\n          <div className=\"row\">{userJsx}</div>\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nconst getDetails = url => {\n  fetch(url).then(data => console.log(data));\n  return\n}\n\nconst mapStateToProps = (state) => ({\n  reduxUserState: state.users.pokemons,\n});\n\n// jm add fetchUsers to connect to store\n// this makes the data interaction from the userActions available from the store -- check component state if function is available\nexport default connect(mapStateToProps, {deleteUser, fetchUsers, getPokemonDetail})(Users);\n","export const DELETE_USER = \"DELETE_USER\";\nexport const ADD_USER = \"ADD_USER\";\nexport const FETCH_USERS = \"FETCH_USERS\";\nexport const CREATE_USER = \"CREATE_USER\";","import {DELETE_USER, ADD_USER} from '../actions/ActionTypes';\nimport {FETCH_USERS} from '../actions/ActionTypes';\nimport {CREATE_USER} from '../actions/ActionTypes';\n\nconst initialState = {\n    pokemons: [],\n  };\n\n\nexport default function(state=initialState, action) {\n    switch(action.type) {\n        case DELETE_USER: \n            let filteredArray = state.pokemons.filter((user) => (user.name !== action.payload));\n            return {\n                ...state,\n                pokemons: filteredArray,\n            }\n        case ADD_USER: \n              \n            let newUsersArray = [...state.users, action.payload.userData ]\n\n            return {\n                ...state,\n                users: newUsersArray,\n            }\n        case FETCH_USERS:\n            return {\n                ...state,\n                pokemons: action.payload,\n            }\n\n        case CREATE_USER:\n              \n           let newCreateUsersArray = [...state.users, action.payload.userData ]\n\n           return {\n               ...state,\n               users: newCreateUsersArray,\n           }\n    \n        default:\n            return state;\n\n    }\n}","import {combineReducers} from \"redux\";\nimport userReducer from \"./userReducer\";\n\nexport default combineReducers({\n    users: userReducer,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst initialState = {};\nconst middleware = [thunk];\n \nconst Store = createStore(\n    rootReducer, \n    initialState, \n    compose(applyMiddleware(...middleware))\n);\n\nexport default Store;","import React from \"react\";\nimport \"./App.css\";\nimport User from \"./Users\";\nimport {Provider} from 'react-redux';\nimport Store from './Store';\nimport { Spring } from 'react-spring/renderprops';\n\n\nclass App extends React.Component {\n\n  render() {\n    return (\n    \n      <Provider store={Store}>\n\n      <Spring\n        from={{ opacity: 0, marginLeft: 200 }}\n        to={{ opacity: 1, marginLeft: 0 }}\n        config={{ duration: 1000, delay: 100 }}>\n          {(props) => (\n\n                <div className=\"App\" style={props} >\n                  <header className=\"App-header\">\n                  <h1>Pokemon Directory</h1>\n                 </header>\n                </div>\n              \n            )}\n\n      </Spring>\n      <Spring\n        from={{ opacity: 0, marginRight: 200 }}\n        to={{ opacity: 1, marginRight: 0 }}\n        config={{ duration: 1000, delay: 100 }}>\n          {(props) => (\n\n                <div className=\"App\" style={props} >\n                  <hr />\n                  <User />\n                </div>\n              \n            )}\n\n      </Spring>\n              \n\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}